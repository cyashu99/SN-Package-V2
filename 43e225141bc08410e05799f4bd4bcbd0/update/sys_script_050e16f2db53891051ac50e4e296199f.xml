<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_journal_field</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_journal_field">element=work_notes^name=sn_customerservice_cgb_case^EQ<item endquery="false" field="element" goto="false" newquery="false" operator="=" or="false" value="work_notes"/>
            <item endquery="false" field="name" goto="false" newquery="false" operator="=" or="false" value="sn_customerservice_cgb_case"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Sprinklr note webhook</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	try{
		var note = global.CSMBaseAPIUtils.getCustomJSONFromGR(current, null, null);
		note.entityType = 'comment';
		note.operation = current.operation();
		note = JSON.stringify(note);
		gs.info('Payload for comment : ' + note);
	}catch(ex){
		gs.error(ex);
	}
	
	var r;
	try{
		r = new sn_ws.RESTMessageV2('SprinklrCrm2socialLink', 'POST');
		r.setStringParameter("env", gs.getProperty('x_spri3_sprinklr.subdomain'));
		r.setRequestHeader("Accept","application/json");
		r.setRequestHeader('Content-Type','application/json');
		r.setRequestBody(note);
		var response = r.execute();
		gs.info("Response Recieved :  " + response.getStatusCode()+ response.getBody() );
	}
	catch(ex) {
		gs.error(ex);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-05-10 09:42:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>050e16f2db53891051ac50e4e296199f</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>Sprinklr note webhook</sys_name>
        <sys_overrides/>
        <sys_package display_value="Sprinklr" source="x_spri3_sprinklr">43e225141bc08410e05799f4bd4bcbd0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Sprinklr">43e225141bc08410e05799f4bd4bcbd0</sys_scope>
        <sys_update_name>sys_script_050e16f2db53891051ac50e4e296199f</sys_update_name>
        <sys_updated_by>nayan.teja@sprinklr.com</sys_updated_by>
        <sys_updated_on>2023-08-22 06:28:03</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=050e16f2db53891051ac50e4e296199f"/>
</record_update>
